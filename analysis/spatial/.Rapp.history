rm(list=ls())#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('src/initialize.R')#
#
set.seed(444)#
dats <- genSpatialOccData()#
model.input <- prepModData(dats$data, dats$y, dats$distance,#
                           nsite=250)
rm(list=ls())#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('src/initialize.R')#
#
set.seed(444)#
dats <- genSpatialOccData()#
model.input <- prepModData(dats$data, dats$y, dats$distance,#
                           nsite=250)
rm(list=ls())#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('src/initialize.R')#
#
set.seed(444)#
dats <- genSpatialOccData()#
model.input <- prepModData(dats$data, dats$y, dats$distance,#
                           nsite=250)
rm(list=ls())#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('src/initialize.R')#
#
set.seed(444)#
dats <- genSpatialOccData()#
model.input <- prepModData(dats$data, dats$y, dats$distance,#
                           nsite=250)
rm(list=ls())#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('src/initialize.R')#
#
set.seed(444)#
dats <- genSpatialOccData()#
model.input <- prepModData(dats$data, dats$y, dats$distance,#
                           nsite=250)
rm(list=ls())#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('src/initialize.R')#
#
set.seed(444)#
dats <- genSpatialOccData()#
model.input <- prepModData(dats$data, dats$y, dats$distance,#
                           nsite=250)
rm(list=ls())#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('src/initialize.R')#
#
set.seed(444)#
dats <- genSpatialOccData()#
model.input <- prepModData(dats$data, dats$y, dats$distance,#
                           nsite=250)
rm(list=ls())#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('src/initialize.R')#
#
set.seed(444)#
dats <- genSpatialOccData()#
model.input <- prepModData(dats$data, dats$y, dats$distance,#
                           nsite=250)
?traceplot
rm(list=ls())#
library(nimble)#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('../all/plotting.R')#
save.dir <-  "../../../saved/spatial/saved"#
#
## original model jags and nimble#
load(file=file.path(save.dir, "orig.Rdata"))#
#
## vanilla nimble and auto block#
load(file=file.path(save.dir, "opt1.Rdata"))#
#
## ## custom sampler for zs, slice for other parms#
## load(file=file.path(save.dir, "opt2.Rdata"))#
#
## ## rename results#
## sp.opt2[[1]] <- rename_MCMC_comparison_method('nimbleOpt2',#
##                                                  'slice',#
##                                                  comparison=sp.opt2[[1]])#
## compare mcmcs#
sp.occ.all <- combine_MCMC_comparison_results(sp.orig[[1]],#
                                                 sp.opt1[[1]],#
                                                 ## sp.opt2[[1]],#
                                                 name = "sp" )
checkChains(sp.occ.all[[1]]$samples,#
            f.path = file.path(save.dir,#
            "../figures/chains/%s.pdf"))
x
?sample
x[seq(1:length(x), by=10)]
x[seq(from=1, to=length(x), by=10)]
Q
rm(list=ls())#
library(nimble)#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('../all/plotting.R')#
save.dir <-  "../../../saved/spatial/saved"#
#
## original model jags and nimble#
load(file=file.path(save.dir, "orig.Rdata"))#
#
## vanilla nimble and auto block#
load(file=file.path(save.dir, "opt1.Rdata"))#
#
## ## custom sampler for zs, slice for other parms#
## load(file=file.path(save.dir, "opt2.Rdata"))#
#
## ## rename results#
## sp.opt2[[1]] <- rename_MCMC_comparison_method('nimbleOpt2',#
##                                                  'slice',#
##                                                  comparison=sp.opt2[[1]])#
## compare mcmcs#
sp.occ.all <- combine_MCMC_comparison_results(sp.orig[[1]],#
                                                 sp.opt1[[1]],#
                                                 ## sp.opt2[[1]],#
                                                 name = "sp" )#
## make_MCMC_comparison_pages(sp.occ.all,#
##                            dir=file.path(save.dir,#
##                              "../figures/comparisons"))#
#
checkChains(sp.occ.all[[1]]$samples,#
            f.path = file.path(save.dir,#
            "../figures/chains/%s.pdf"))
rm(list=ls())#
library(nimble)#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('../all/plotting.R')#
save.dir <-  "../../../saved/spatial/saved"#
#
## original model jags and nimble#
load(file=file.path(save.dir, "orig.Rdata"))#
#
## vanilla nimble and auto block#
load(file=file.path(save.dir, "opt1.Rdata"))#
#
## ## custom sampler for zs, slice for other parms#
## load(file=file.path(save.dir, "opt2.Rdata"))#
#
## ## rename results#
## sp.opt2[[1]] <- rename_MCMC_comparison_method('nimbleOpt2',#
##                                                  'slice',#
##                                                  comparison=sp.opt2[[1]])#
## compare mcmcs#
sp.occ.all <- combine_MCMC_comparison_results(sp.orig[[1]],#
                                                 sp.opt1[[1]],#
                                                 ## sp.opt2[[1]],#
                                                 name = "sp" )#
## make_MCMC_comparison_pages(sp.occ.all,#
##                            dir=file.path(save.dir,#
##                              "../figures/comparisons"))#
#
checkChains(sp.occ.all[[1]]$samples,#
            f.path = file.path(save.dir,#
            "../figures/chains/%s.pdf"))
rm(list=ls())#
library(nimble)#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('../all/plotting.R')#
save.dir <-  "../../../saved/spatial/saved"#
#
## original model jags and nimble#
load(file=file.path(save.dir, "orig.Rdata"))#
#
## vanilla nimble and auto block#
load(file=file.path(save.dir, "opt1.Rdata"))#
#
## ## custom sampler for zs, slice for other parms#
## load(file=file.path(save.dir, "opt2.Rdata"))#
#
## ## rename results#
## sp.opt2[[1]] <- rename_MCMC_comparison_method('nimbleOpt2',#
##                                                  'slice',#
##                                                  comparison=sp.opt2[[1]])#
## compare mcmcs#
sp.occ.all <- combine_MCMC_comparison_results(sp.orig[[1]],#
                                                 sp.opt1[[1]],#
                                                 ## sp.opt2[[1]],#
                                                 name = "sp" )#
## make_MCMC_comparison_pages(sp.occ.all,#
##                            dir=file.path(save.dir,#
##                              "../figures/comparisons"))#
#
checkChains(sp.occ.all[[1]]$samples,#
            f.path = file.path(save.dir,#
            "../figures/chains/%s.pdf"))
rm(list=ls())#
library(nimble)#
setwd("~/Dropbox/nimble/occupancy/analysis/spatial")#
source('../all/plotting.R')#
save.dir <-  "../../../saved/spatial/saved"#
#
## original model jags and nimble#
load(file=file.path(save.dir, "orig.Rdata"))#
#
## vanilla nimble and auto block#
load(file=file.path(save.dir, "opt1.Rdata"))#
#
## ## custom sampler for zs, slice for other parms#
## load(file=file.path(save.dir, "opt2.Rdata"))#
#
## ## rename results#
## sp.opt2[[1]] <- rename_MCMC_comparison_method('nimbleOpt2',#
##                                                  'slice',#
##                                                  comparison=sp.opt2[[1]])#
## compare mcmcs#
sp.occ.all <- combine_MCMC_comparison_results(sp.orig[[1]],#
                                                 sp.opt1[[1]],#
                                                 ## sp.opt2[[1]],#
                                                 name = "sp" )#
## make_MCMC_comparison_pages(sp.occ.all,#
##                            dir=file.path(save.dir,#
##                              "../figures/comparisons"))#
#
checkChains(sp.occ.all[[1]]$samples,#
            f.path = file.path(save.dir,#
            "../figures/chains/%s.pdf"))
library(lme4)
x <- rnorm(10)
y <- sample(0:1, 10)
y <- sample(0:1, 10, TRUE)
y
x
glmer(y ~ x, family = "binomial")
z <- sample(c("a", "c", "d"), 10, TRUE)
z
glmer(y ~ x + (1|z), family = "binomial")
