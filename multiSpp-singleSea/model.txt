model
{
    cato_occ_mean ~ dunif(0, 1)
    mu_ucato <- log(cato_occ_mean) - log(1 - cato_occ_mean)
    fcw_occ_mean ~ dunif(0, 1)
    mu_ufcw <- log(fcw_occ_mean) - log(1 - fcw_occ_mean)
    cato_det_mean ~ dunif(0, 1)
    mu_vcato <- log(cato_det_mean) - log(1 - cato_det_mean)
    fcw_det_mean ~ dunif(0, 1)
    mu_vfcw <- log(fcw_det_mean) - log(1 - fcw_det_mean)
    sigma_ucato ~ dunif(0, 100)
    sigma_ufcw ~ dunif(0, 100)
    mu_a1 ~ dnorm(0, 0.001)
    sigma_a1 ~ dunif(0, 100)
    mu_a2 ~ dnorm(0, 0.001)
    sigma_a2 ~ dunif(0, 100)
    mu_a3 ~ dnorm(0, 0.001)
    sigma_a3 ~ dunif(0, 100)
    mu_a4 ~ dnorm(0, 0.001)
    sigma_a4 ~ dunif(0, 100)
    sigma_vcato ~ dunif(0, 100)
    sigma_vfcw ~ dunif(0, 100)
    mu_b1 ~ dnorm(0, 0.001)
    sigma_b1 ~ dunif(0, 100)
    mu_b2 ~ dnorm(0, 0.001)
    sigma_b2 ~ dunif(0, 100)
    for (i in 1:(num_species)) {
        u_cato[i] ~ dnorm(mu_ucato, sd = sigma_ucato)
        u_fcw[i] ~ dnorm(mu_ufcw, sd = sigma_ufcw)
        a1[i] ~ dnorm(mu_a1, sd = sigma_a1)
        a2[i] ~ dnorm(mu_a2, sd = sigma_a2)
        a3[i] ~ dnorm(mu_a3, sd = sigma_a3)
        a4[i] ~ dnorm(mu_a4, sd = sigma_a4)
        v_cato[i] ~ dnorm(mu_vcato, sd = sigma_vcato)
        v_fcw[i] ~ dnorm(mu_vfcw, sd = sigma_vfcw)
        b1[i] ~ dnorm(mu_b1, sd = sigma_b1)
        b2[i] ~ dnorm(mu_b2, sd = sigma_b2)
        logit(psi[1:num_points, i]) <- u_cato[i] * (1 - habitat_ind[1:num_points]) + u_fcw[i] * habitat_ind[1:num_points] + a1[i] * ufc_linear[1:num_points] + a2[i] * ufc_quadratic[1:num_points] + a3[i] * ba_linear[1:num_points] + a4[i] * ba_quadratic[1:num_points]
        mu_psi[1:num_points, i] <- psi[1:num_points, i]
        logit(p[1:num_points, 1:max_num_reps, i]) <- (v_cato[i] * (1 - habitat_ind[1:num_points]) + v_fcw[i] * habitat_ind[1:num_points]) %*% asRow(onesRow[1, 1:max_num_reps]) + b1[i] * date_linear[1:num_points, 1:max_num_reps] + b2[i] * date_quadratic[1:num_points, 1:max_num_reps]
        X[1:num_points, 1:max_num_reps, i] ~ dBernDetectionMatrix(occProb = mu_psi[1:num_points, i], detectionProb = p[1:num_points, 1:max_num_reps, i], num_reps = num_reps[1:num_points])
    }
}
